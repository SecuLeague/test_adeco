---
- name: Test Jenkins Pipeline for Codel Project Deployment
  hosts: localhost
  connection: local
  gather_facts: no

  pre_tasks:
    - name: Install required Python packages
      pip:
        name: 
          - python-jenkins
          - requests
        state: present
      become: yes

  vars:
    jenkins_url: "http://192.168.150.10:8080"
    jenkins_user: "amal"
    jenkins_password: "Seculeague@2024"
    project_name: "Codel-Deployment"
    git_repo: "https://github.com/SecuLeague/CODEL1.0.git"
    ssh_key_path: "~/.ssh/id_rsa"
    ansible_python_interpreter: /usr/bin/python3
    target_server: "172.16.0.110"

  tasks:
    - name: Create Jenkins job template
      copy:
        content: |
          <?xml version='1.0' encoding='UTF-8'?>
          <project>
            <description>{{ project_name }}</description>
            <scm class="hudson.plugins.git.GitSCM">
              <userRemoteConfigs>
                <hudson.plugins.git.UserRemoteConfig>
                  <url>{{ git_repo }}</url>
                </hudson.plugins.git.UserRemoteConfig>
              </userRemoteConfigs>
              <branches>
                <hudson.plugins.git.BranchSpec>
                  <name>*/main</name>
                </hudson.plugins.git.BranchSpec>
              </branches>
            </scm>
          </project>
        dest: "jenkins_job_template.xml"

    - name: Ensure Jenkins is running
      uri:
        url: "{{ jenkins_url }}/api/json"
        method: GET
        status_code: [200, 403]
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_password }}"
        force_basic_auth: yes
        validate_certs: no
      register: jenkins_status
      ignore_errors: yes

    - name: Create Jenkins job
      uri:
        url: "{{ jenkins_url }}/createItem?name={{ project_name }}"
        method: POST
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_password }}"
        force_basic_auth: yes
        body: "{{ lookup('file', 'jenkins_job_template.xml') }}"
        body_format: raw
        headers:
          Content-Type: application/xml
        status_code: [200, 201, 302]
        validate_certs: no
      register: jenkins_job
      when: jenkins_status is success

    - name: Generate SSH key if not exists
      command: ssh-keygen -t rsa -b 2048 -f {{ ssh_key_path }} -N ""
      args:
        creates: "{{ ssh_key_path }}"

    - name: Add SSH public key to authorized_keys
      authorized_key:
        user: root
        state: present
        key: "{{ lookup('file', ssh_key_path + '.pub') }}"
      delegate_to: "{{ target_server }}"
      ignore_errors: yes

    - name: Test SSH connectivity
      wait_for:
        host: "{{ target_server }}"
        port: 22
        timeout: 10
      register: ssh_check
      ignore_errors: yes

    - name: Check SSH service status
      command: systemctl status sshd
      register: ssh_service_status
      delegate_to: "{{ target_server }}"
      ignore_errors: yes

    - name: Trigger Jenkins job
      uri:
        url: "{{ jenkins_url }}/job/{{ project_name }}/build"
        method: POST
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_password }}"
        force_basic_auth: yes
        status_code: [201, 302]
        validate_certs: no
      when: jenkins_job is success
      register: triggered_job

    - name: Wait for job to complete
      uri:
        url: "{{ jenkins_url }}/job/{{ project_name }}/api/json"
        method: GET
        user: "{{ jenkins_user }}"
        password: "{{ jenkins_password }}"
        force_basic_auth: yes
        return_content: yes
        validate_certs: no
      register: job_info
      until: job_info.json is defined and job_info.json.color != 'blue_anime'
      retries: 10
      delay: 30
      when: triggered_job is success

    - name: Display results
      debug:
        msg:
          - "Jenkins status: {{ jenkins_status.status | default('Not running') }}"
          - "Job status: {{ job_info.json.color | default('Unknown') if job_info.json is defined else 'Not available' }}"
